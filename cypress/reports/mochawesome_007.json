{
  "stats": {
    "suites": 10,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2023-04-24T13:56:34.283Z",
    "end": "2023-04-24T13:56:37.416Z",
    "duration": 3133,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c485fccb-b28e-4d6c-bafb-63b8faa759ab",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "file": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b9e21fd7-06fc-48b3-a334-5e007c2fd262",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 412,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "5034d815-f729-4b99-803f-2c0bdb4a6259",
              "parentUUID": "b9e21fd7-06fc-48b3-a334-5e007c2fd262",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5034d815-f729-4b99-803f-2c0bdb4a6259"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ba887564-be87-4f13-8c7f-d8e5730fe8f0",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "d0bc07c3-cefd-4700-8f29-774ab6d61ac9",
              "parentUUID": "ba887564-be87-4f13-8c7f-d8e5730fe8f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "8bff5f43-a018-43f9-b365-e7f2b9af2da7",
              "parentUUID": "ba887564-be87-4f13-8c7f-d8e5730fe8f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "026feec0-f6df-4749-8a70-6ee95b279f24",
              "parentUUID": "ba887564-be87-4f13-8c7f-d8e5730fe8f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0bc07c3-cefd-4700-8f29-774ab6d61ac9",
            "8bff5f43-a018-43f9-b365-e7f2b9af2da7",
            "026feec0-f6df-4749-8a70-6ee95b279f24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b594c30f-893a-42d9-adb3-3a5ac8d1fd1c",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "654c1e00-8a07-40ee-8f03-54d096df5548",
              "parentUUID": "b594c30f-893a-42d9-adb3-3a5ac8d1fd1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "654c1e00-8a07-40ee-8f03-54d096df5548"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 94,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71e3ceea-5944-4544-aba3-2ae73da1d347",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (configFile, version, ...) } to have property 'viewportHeight' of 660, but got 900",
                "estack": "AssertionError: expected { Object (configFile, version, ...) } to have property 'viewportHeight' of 660, but got 900\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\\integration\\2-advanced-examples\\cypress_api.spec.js:176:30)",
                "diff": "- 900\n+ 660\n"
              },
              "uuid": "b52154b1-a544-4e58-bb8d-27b6bad3e1bb",
              "parentUUID": "71e3ceea-5944-4544-aba3-2ae73da1d347",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b52154b1-a544-4e58-bb8d-27b6bad3e1bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f94f251e-15cf-4375-9350-0296700355e6",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "5631d21b-964b-441d-b65a-b9c04e89bcff",
              "parentUUID": "f94f251e-15cf-4375-9350-0296700355e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5631d21b-964b-441d-b65a-b9c04e89bcff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "046f7b55-db3d-4ca8-848b-f5e203c12bd8",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "c09613e7-6222-4b25-9fe9-a541fd3b7442",
              "parentUUID": "046f7b55-db3d-4ca8-848b-f5e203c12bd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c09613e7-6222-4b25-9fe9-a541fd3b7442"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9658917-79df-4290-8421-b910957878e4",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "ddc56686-1f28-4343-a2d3-a1e28d2610b9",
              "parentUUID": "f9658917-79df-4290-8421-b910957878e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ddc56686-1f28-4343-a2d3-a1e28d2610b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 144,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a92ca26-00bc-4a77-bfb5-901086d51b43",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "695a9058-607b-40ea-9340-311b4a09b2a7",
              "parentUUID": "4a92ca26-00bc-4a77-bfb5-901086d51b43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "695a9058-607b-40ea-9340-311b4a09b2a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10aaaab8-e03a-4ae1-8a22-42ee0203192e",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "98dddd16-e28f-4060-8522-52beac35e28b",
              "parentUUID": "10aaaab8-e03a-4ae1-8a22-42ee0203192e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98dddd16-e28f-4060-8522-52beac35e28b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a837658-74db-4f53-b345-9a12aefbe0c8",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "1c94c504-eec9-4c27-b2f4-4e0eb718aedc",
              "parentUUID": "5a837658-74db-4f53-b345-9a12aefbe0c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c94c504-eec9-4c27-b2f4-4e0eb718aedc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}